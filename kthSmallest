/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
   int count;
int target=-1;
    public int kthSmallest(TreeNode root, int k) {
count=k;
changenode(root);
return target;
    }

    public void  changenode(TreeNode node){
    if (node==null)
        return;
    changenode(node.left);
if (--count==0){
    target=node.val;
    return;
}
changenode(node.right);
    }
}给定一个二叉搜索树的根节点 root ，和一个整数 k ，请你设计一个算法查找其中第 k 小的元素（从 1 开始计数）。
输入：root = [3,1,4,null,2], k = 1
输出：1
//遍历二叉树找到即可数据
