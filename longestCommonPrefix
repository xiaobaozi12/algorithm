   public static String longestCommonPrefix(String[] strs) {

        String return1 =strs[0];
        for (int i = 0; i < strs.length; i++) {
            while (strs[i].indexOf(return1)!=0){
                return1 =return1.substring(0,return1.length()-1);
            }

        }
return return1;
        //        int min=strs[0].length();
//
//        for (int i = 0; i <strs.length-1; i++) {
//            if (strs[i+1].length()<min){
//                min=strs[i+1].length();
//            }
//        }
//
//        String rentun1 ="";
//        if (strs.length==1){
//            return strs[0];
//        }
//        int add=0;
//        for (int i = 0; i < min; i++) {
//            HashSet<Object> set = new HashSet<>();
//          set.add(strs[0].charAt(add++));
//            for (int j = 0; j <strs.length; j++) {
//                if (set.add(strs[j].charAt(i))){
//                    return rentun1;
//                }
//                else{
//                    if ( j==strs.length-1)
//                {  rentun1=rentun1+strs[j].charAt(i);}
//                }
//            }
//        }
//        return rentun1;

    }
编写一个函数来查找字符串数组中的最长公共前缀。

如果不存在公共前缀，返回空字符串 ""。

 

示例 1：

输入：strs = ["flower","flow","flight"]
输出："fl"
示例 2：

输入：strs = ["dog","racecar","car"]
输出：""
解释：输入不存在公共前缀。
 

提示：

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] 仅由小写英文字母组成

作者：LeetCode
链接：https://leetcode.cn/leetbook/read/top-interview-questions-easy/xnmav1/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
