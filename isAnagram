public boolean isAnagram(String s, String t) {
        int[] ints =new int[26];
        char[] chars = s.toCharArray();
        char[] chars1 =t.toCharArray();
        if (chars1.length!=chars.length)
            return false;
        for (int i = 0; i < chars.length; i++) {
            ints[chars[i] - 'a']++;
            ints[chars1[i]-'a']--;
        }
        for (int i = 0; i < ints.length; i++) {
            if (ints[i]!=0){
                return false;
            }

        }
        return true;
        //排序比较
//        Arrays.sort(chars1);
//        Arrays.sort(chars);
//   return     Arrays.equals(chars,chars1);


    }
给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。

注意：若 s 和 t 中每个字符出现的次数都相同，则称 s 和 t 互为字母异位词。

 

示例 1:

输入: s = "anagram", t = "nagaram"
输出: true
示例 2:

输入: s = "rat", t = "car"
输出: false
 

提示:

1 <= s.length, t.length <= 5 * 104
s 和 t 仅包含小写字母
 

进阶: 如果输入字符串包含 unicode 字符怎么办？你能否调整你的解法来应对这种情况？

作者：LeetCode
链接：https://leetcode.cn/leetbook/read/top-interview-questions-easy/xn96us/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
