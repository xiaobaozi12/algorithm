class Solution {
 public int climbStairs(int n) {
        if (n==1)
            return 1;
        int[] ints = new int[n + 1];
        ints[1]=1;
        ints[2]=2;
        for (int i = 3; i <=n; i++) {
            ints[i]=ints[i-1]+ints[i-2];
            
                    
        }
        return ints[n];
    }
}假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
//递归可以实现，但是如果数太多会导致栈溢出，可以使用循环来进行计算，因为前面的数是后面的两个数的和，数组循环计算。
