给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。

请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。

注意：最终，合并后数组不应由函数返回，而是存储在数组 nums1 中。为了应对这种情况，nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素，后 n 个元素为 0 ，应忽略。nums2 的长度为 n 。
class Solution {
     public void merge(int[] nums1, int m, int[] nums2, int n) {
        //判断最大值
        //指针法，(从后向前遍历，当1数组的最后一个数大是，2数组的数放在最后面，不然1数组的数放到前面)
         while (n>0&&m>0){
            if (nums1[m-1]<nums2[n-1]){
                nums1[m+n-1]=nums2[n-1];
                n--;
            }
            else {
                nums1[m+n-1]=nums1[m-1];
                m--;
            }
        }
        if (m == 0 && n > 0)
        {
            for (int i=0; i<n; ++i)
                nums1[i] = nums2[i];
        }
    
}}
