/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
 public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
List<List<Integer>> res =new ArrayList<>();
if (root==null){
    return res;
}
        Queue<TreeNode> list = new LinkedList<>();
        list.add(root);
        boolean leftToright=true;
        while (!list.isEmpty()){
            ArrayList<Integer> list1 = new ArrayList<>();
            int count =list.size();
            for (int i = 0; i < count; i++) {
                TreeNode poll = list.poll();
                if (leftToright){
                    list1.add(poll.val);

                }
                else {
                    list1.add(0,poll.val);
                }
                if (poll.left!=null){
                    list.add(poll.left);
                }
                if (poll.right!=null){
                    list.add(poll.right);
                }
               
            }
            res.add(list1);
            leftToright=!leftToright;

        }
        return res;

    }
}
输入：root = [3,9,20,null,null,15,7]
输出：[[3],[20,9],[15,7]]
示例 2：

输入：root = [1]
输出：[[1]]
示例 3：

输入：root = []
输出：[]
//BFS打印
